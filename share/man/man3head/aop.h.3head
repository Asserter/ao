'\" te
.\" بسم الله
.\" Copyright (c) 2022, Asserter, Org. All Rights Reserved.
.TH aop.h 3HEAD "Jul 2022" "SunOS 5.11" "Headers"
.SH NAME
aop.h, aop \- assert operation
.SH SYNOPSIS
.LP
.nf
\fB#include <ao/aop.h>\fR
.fi

.SH DESCRIPTION
.sp
.LP
The \fB<ao/aop.h>\fR header defines the \fBaop_t\fR type through \fBtypedef\fR and defines the following assert operations:
.sp
.ne 2
.mk
.na
\fBAOP_PASS\fR
.ad
.RS 18n
.rt
Assert Operation Pass (always 0)
.RE

.sp
.ne 2
.mk
.na
\fBAOP_FAIL\fR
.ad
.RS 18n
.rt
Assert Operation Fail
.RE

.sp
.ne 2
.mk
.na
\fBAOP_SKIP\fR
.ad
.RS 18n
.rt
Assert Operation Skip
.RE

.sp
.LP
The \fB<ao/aop.h>\fR header defines the \fBaopcmp_t\fR type through \fBtypedef\fR and defines the following assert operation compare types:
.sp
.ne 2
.mk
.na
\fBAOPCMP_NE\fR
.ad
.RS 18n
.rt
Assert Operation Compare \fINot Equal\fR
.RE

.sp
.ne 2
.mk
.na
\fBAOPCMP_EQ\fR
.ad
.RS 18n
.rt
Assert Operation Compare \fIEqual\fR
.RE

.sp
.ne 2
.mk
.na
\fBAOPCMP_LT\fR
.ad
.RS 18n
.rt
Assert Operation Compare \fILess Than\fR
.RE

.sp
.ne 2
.mk
.na
\fBAOPCMP_LE\fR
.ad
.RS 18n
.rt
Assert Operation Compare \fILess Than or Equal\fR
.RE

.sp
.ne 2
.mk
.na
\fBAOPCMP_GT\fR
.ad
.RS 18n
.rt
Assert Operation Compare \fIGreater Than\fR
.RE

.sp
.ne 2
.mk
.na
\fBAOPCMP_GE\fR
.ad
.RS 18n
.rt
Assert Operation Compare \fIGreater Than or Equal\fR
.RE

.sp
.LP
The following macro name is defined to concatenate assert operations:
.sp
.ne 2
.mk
.na
\fBAOP_CAT\fR(\fIaop1\fR, \fIaop2\fR)
.ad
.sp .6
.RS 4n
Evaluates in the following order: to the most strict \fBAOP_FAIL\fR and then to less strict \fBAOP_SKIP\fR if at least \fIaop1\fR or \fIaop2\fR has the equivalent value or to \fBAOP_PASS\fR if both \fIaop1\fR and \fIaop2\fR are \fBAOP_PASS\fR values.
.RE

.sp
.LP
The following macros are defined to be used as inline assert operation functions for \fIboolean types\fR:
.sp
.ne 2
.mk
.na
\fBAOP_BOOL_EQ\fR(\fIexpected\fR, \fIactual\fR)
.ad
.sp .6
.RS 4n
Evaluates to \fBAOP_PASS\fR if the values of \fIexpected\fR and \fIactual\fR are equal, otherwise the operation evaluation is \fBAOP_FAIL\fR.
.RE

.sp
.ne 2
.mk
.na
\fBAOP_BOOL_EQSKP\fR(\fIexpected\fR, \fIactual\fR)
.ad
.sp .6
.RS 4n
Evaluates to \fBAOP_PASS\fR if the values of \fIexpected\fR and \fIactual\fR are equal, otherwise the operation evaluation is \fBAOP_SKIP\fR.
.RE

.sp
.LP
The following macros are defined to be used as inline assert operation functions for \fIintegral types\fR:
.sp
.ne 2
.mk
.na
\fBAOP_EQ\fR(\fIexpected\fR, \fIactual\fR)
.ad
.sp .6
.RS 4n
Evaluates to \fBAOP_PASS\fR if the values of \fIexpected\fR and \fIactual\fR are equal, otherwise the operation evaluation is \fBAOP_FAIL\fR.
.RE

.sp
.ne 2
.mk
.na
\fBAOP_EQSKP\fR(\fIexpected\fR, \fIactual\fR)
.ad
.sp .6
.RS 4n
Evaluates to \fBAOP_PASS\fR if the values of \fIexpected\fR and \fIactual\fR are equal, otherwise the operation evaluation is \fBAOP_SKIP\fR.
.RE

.sp
.ne 2
.mk
.na
\fBAOP_CMP\fR(\fIcmptyp\fR, \fIexpected\fR, \fIactual\fR)
.ad
.sp .6
.RS 4n
Evaluates to \fBAOP_PASS\fR if the values of \fIexpected\fR and \fIactual\fR conform to relation specified by assert operation \fIcmptyp\fR, otherwise the operation evaluation is \fBAOP_FAIL\fR.
.RE

.sp
.ne 2
.mk
.na
\fBAOP_CMPSKP\fR(\fIcmptyp\fR, \fIexpected\fR, \fIactual\fR)
.ad
.sp .6
.RS 4n
Evaluates to \fBAOP_PASS\fR if the values of \fIexpected\fR and \fIactual\fR conform to relation specified by assert operation \fIcmptyp\fR, otherwise the operation evaluation is \fBAOP_SKIP\fR.
.RE

.SH ATTRIBUTES
.sp
.LP
See \fBattributes\fR(5) for descriptions of the following attributes:
.sp

.sp
.TS
tab(@) box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPE@ATTRIBUTE VALUE
_
Interface Stability@Committed
_
MT-Level@Safe
_
Standard@None
.TE

.SH SEE ALSO
.sp
.LP
\fBaop_eq\fR(3C), \fBaop_expr\fR(3C), \fBaop_cmp\fR(3C), \fBaop_eqskp\fR(3C), \fBaop_exprskp\fR(3C), \fBaop_cmpskp\fR(3C), \fBaop_cat\fR(3C), \fBaopf.h\fR(3HEAD), \fBao.h\fR(3HEAD)

.SH AUTHOR
Written by Ali Muhammed <uniapi@outlook.com>
.SH COPYRIGHT
Copyright (c) 2022 Asserter, Org.
.PP
Permission is granted to copy, distribute and/or modify this document
under the terms of the Open Software License ("\s-1OSL\s0"), Version 3.0
