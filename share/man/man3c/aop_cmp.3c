'\" te
.\" بسم الله
.\" Copyright (c) 2022, Asserter, Org. All Rights Reserved.
.TH aop_cmp 3c "Jul 2022" "SunOS 5.11" "C Library Functions"
.SH NAME
aop_xx_cmp \- assert operation for relation
.SH SYNOPSIS
.LP
.nf
#include <ao/aop.h>

\fBaop_t\fR \fBaop_char_cmp\fR(\fBaopmode_t\fR \fImode\fR, \fBchar\fR \fIactual\fR, \fBchar\fR \fIexpected\fR);
.fi

.LP
.nf
\fBaop_t\fR \fBaop_shrt_cmp\fR(\fBaopmode_t\fR \fImode\fR, \fBshort\fR \fIactual\fR, \fBshort\fR \fIexpected\fR);
.fi

.LP
.nf
\fBaop_t\fR \fBaop_int_cmp\fR(\fBaopmode_t\fR \fImode\fR, \fBint\fR \fIactual\fR, \fBint\fR \fIexpected\fR);
.fi

.LP
.nf
\fBaop_t\fR \fBaop_long_cmp\fR(\fBaopmode_t\fR \fImode\fR, \fBlong\fR \fIactual\fR, \fBlong\fR \fIexpected\fR);
.fi

.LP
.nf
\fBaop_t\fR \fBaop_llong_cmp\fR(\fBaopmode_t\fR \fImode\fR, \fBlong long\fR \fIactual\fR, \fBlong long\fR \fIexpected\fR);
.fi

.LP
.nf
\fBaop_t\fR \fBaop_uchar_cmp\fR(\fBaopmode_t\fR \fImode\fR, \fBunsigned char\fR \fIactual\fR, \fBunsigned char\fR \fIexpected\fR);
.fi

.LP
.nf
\fBaop_t\fR \fBaop_ushrt_cmp\fR(\fBaopmode_t\fR \fImode\fR, \fBunsigned short\fR \fIactual\fR, \fBunsigned short\fR \fIexpected\fR);
.fi

.LP
.nf
\fBaop_t\fR \fBaop_uint_cmp\fR(\fBaopmode_t\fR \fImode\fR, \fBunsigned int\fR \fIactual\fR, \fBunsigned int\fR \fIexpected\fR);
.fi

.LP
.nf
\fBaop_t\fR \fBaop_ulong_cmp\fR(\fBaopmode_t\fR \fImode\fR, \fBunsigned long\fR \fIactual\fR, \fBunsigned long\fR \fIexpected\fR);
.fi

.LP
.nf
\fBaop_t\fR \fBaop_ullong_cmp\fR(\fBaopmode_t\fR \fImode\fR, \fBunsigned long long\fR \fIactual\fR, \fBunsigned long long\fR \fIexpected\fR);
.fi

.LP
.nf
\fBaop_t\fR \fBaop_flt_cmp\fR(\fBaopmode_t\fR \fImode\fR, \fBfloat\fR \fIactual\fR, \fBfloat\fR \fIexpected\fR, \fBfloat\fR \fIreltol\fR, \fBfloat\fR \fIabstol\fR);
.fi

.LP
.nf
\fBaop_t\fR \fBaop_dbl_cmp\fR(\fBaopmode_t\fR \fImode\fR, \fBdouble\fR \fIactual\fR, \fBdouble\fR \fIexpected\fR, \fBdouble\fR \fIreltol\fR, \fBdouble\fR \fIabstol\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The \fImode\fR argument should be one of the following assert operation modes: \fBAOPMODE_NE\fR, \fBAOPMODE_EQ\fR, \fBAOPMODE_LT\fR, \fBAOPMODE_LE\fR, \fBAOPMODE_GT\fR or \fBAOPMODE_GE\fR.
.sp
.LP
The \fBaop_char_cmp()\fR and \fBaop_uchar_cmp()\fR functions assert \fIactual\fR and \fIexpected\fR characters for relation.

.sp
.LP
The \fBaop_shrt_cmp()\fR, \fBaop_int_cmp()\fR, \fBaop_long_cmp()\fR, \fBaop_llong_cmp()\fR, \fBaop_ushrt_cmp()\fR, \fBaop_uint_cmp()\fR, \fBaop_ulong_cmp()\fR and \fBaop_ullong_cmp()\fR functions assert \fIactual\fR and \fIexpected\fR integer numbers for relation.
.sp

.LP
The \fBaop_flt_cmp()\fR and \fBaop_dbl_cmp()\fR functions assert \fIactual\fR and \fIexpected\fR floating-point numbers for relation using relative \fIreltol\fR and absolute \fIabstol\fR tolerance.
.sp

.SH RETURN VALUES
.sp
.LP
Upon successful assert operation, the \fBaop_xx_cmp()\fR functions return \fBAOP_PASS\fR. Otherwise, \fBAOP_FAIL\fR is returned and the assert operation is considered to be failed. If the assert operator mode is set to \fIAOMODE_STOP\fR the test stops immediately and the remaining assert operations are not run.

.SH ATTRIBUTES
.sp
.LP
See \fBattributes\fR(5) for descriptions of the following attributes:
.sp

.sp
.TS
tab(@) box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPE@ATTRIBUTE VALUE
_
Interface Stability@Committed
_
MT-Level@Safe
_
Standard@None
.TE

.SH SEE ALSO
.sp
.LP
\fBaop_cmpskp\fR(3C), \fBaop_eq\fR(3C), \fBaop.h\fR(3HEAD), \fBao.h\fR(3HEAD)

.SH AUTHOR
Written by Ali Muhammed <uniapi@outlook.com>
.SH COPYRIGHT
Copyright (c) 2022 Asserter, Org.
.PP
Permission is granted to copy, distribute and/or modify this document
under the terms of the Open Software License ("\s-1OSL\s0"), Version 3.0
